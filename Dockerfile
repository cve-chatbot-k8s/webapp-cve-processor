# Stage 1: Build the Go application
FROM golang:1.21 as builder

# Set the Current Working Directory inside the container
WORKDIR /app

# Copy go mod and sum files
COPY go.mod go.sum ./

# Download all dependencies. Dependencies will be cached if the go.mod and go.sum files are not changed
RUN go mod download

# Copy the source from the current directory to the Working Directory inside the container
COPY . .

# Build the Go app
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o main ./cmd/api/main.go

# Stage 2: Run the Go app in a container based on the scratch image
FROM alpine:latest

# Install ca-certificates, kafkacat, and nc so that HTTPS and Kafka work consistently
RUN apk add --no-cache ca-certificates kafkacat netcat-openbsd
 
# Copy the readiness probe script into the container
COPY readiness-probe.sh /usr/local/bin/readiness-probe.sh
 
# Make sure the readiness probe script is executable
RUN chmod +x /usr/local/bin/readiness-probe.sh

# Install ca-certificates so that HTTPS works consistently
RUN apk add --no-cache ca-certificates

# Set environment variables
ENV KAFKA_BOOTSTRAP_SERVERS=${KAFKA_BOOTSTRAP_SERVERS}
ENV KAFKA_TOPIC=${KAFKA_TOPIC}
ENV PORT=${PORT}

# Copy the pre-built binary file from the previous stage
COPY --from=builder /app/main .

# Expose port 8080 to the outside world
EXPOSE 3000

# Command to run the executable
CMD ["./main"]
